[{"title":"Core","documnetation":"TODO: Some dummy description","path":"Core","code":""},{"title":"Avro Binding Schema ID","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Binding/Schema ID","code":""},{"title":"Avro Binding Schema Set","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Binding/Schema Set","code":""},{"title":"Avro Externalize","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Externalize","code":""},{"title":"Avro Functions","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Functions","code":""},{"title":"Avro Internalize","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Internalize","code":""},{"title":"Avro Model Generator","documnetation":"TODO: Some dummy description","path":"External Formats/Avro/Model Generator/Model include/exclude","code":""},{"title":"Daml Binding Schema ID","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Binding/Schema ID","code":""},{"title":"Daml Binding Schema Set","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Binding/Schema Set","code":""},{"title":"Daml Externalize","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Externalize","code":""},{"title":"Daml Functions","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Functions","code":""},{"title":"Daml Internalize","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Internalize","code":""},{"title":"Daml Model Generator","documnetation":"TODO: Some dummy description","path":"External Formats/Daml/Model Generator/Model include/exclude","code":""},{"title":"JSON Binding Schema ID","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Binding/Schema ID","code":""},{"title":"JSON Binding Schema Set","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Binding/Schema Set","code":""},{"title":"JSON Externalize","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Externalize","code":""},{"title":"Json Functions","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Functions","code":""},{"title":"JSON Internalize","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Internalize","code":""},{"title":"JSON Model Generator","documnetation":"TODO: Some dummy description","path":"External Formats/JSONSchema/Model Generator/Model include/exclude","code":""},{"title":"Protobuf Binding Schema ID","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Binding/Schema ID","code":""},{"title":"Protobuf Binding Schema Set","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Binding/Schema Set","code":""},{"title":"Protobuf Externalize","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Externalize","code":""},{"title":"Protobuf Functions","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Functions","code":""},{"title":"Protobuf Internalize","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Internalize","code":""},{"title":"Protobuf Model Generator","documnetation":"TODO: Some dummy description","path":"External Formats/Protobuf/Model Generator/Model include/exclude","code":""},{"title":"Xml Binding Schema ID","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Binding/Schema ID","code":""},{"title":"Xml Binding Schema Set","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Binding/Schema Set","code":""},{"title":"Xml Externalize","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Externalize","code":""},{"title":"Xml Functions","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Functions","code":""},{"title":"Xml Internalize","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Internalize","code":""},{"title":"Xml Model Generator","documnetation":"TODO: Some dummy description","path":"External Formats/XML/Model Generator/Model include/exclude","code":""},{"title":"Function Activators","documnetation":"TODO: Some dummy description","path":"Function Activators","code":""},{"title":"Association - Embedded","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/association/embedded","code":""},{"title":"Association - Inheritance","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/association/inheritance","code":""},{"title":"Association - ClassMappingByClass","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/classMappingByClass","code":""},{"title":"Association - ClassMappingFilterWithInnerJoin","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/classMappingFilterWithInnerJoin","code":""},{"title":"DataType","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/dataType","code":""},{"title":"Dates - datetime","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/dates/datetime","code":""},{"title":"Dates - strictdate","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/dates/strictdate","code":""},{"title":"Distinct","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/distinct","code":""},{"title":"Dynajoin","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/dynajoin","code":""},{"title":"Embedded - Advanced - Inline - Nested","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/embedded/inline/nested","code":""},{"title":"Embedded - Advanced - Inline - targetId","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/embedded/inline/targetId","code":""},{"title":"Enumeration","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/enumeration","code":""},{"title":"Extend - all","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/all","code":""},{"title":"Extend - distinct","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/distinct","code":""},{"title":"Extend - embeddedPropertyMapping","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/embeddedPropertyMapping","code":""},{"title":"Extend - filter","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/filter","code":""},{"title":"Extend - groupBy","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/groupBy","code":""},{"title":"Extent - inlineEmbeddedPropertyMapping","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/inlineEmbeddedPropertyMapping","code":""},{"title":"Extend - mainTable","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/mainTable","code":""},{"title":"Extend - model","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/model","code":""},{"title":"Extend - primaryKey","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/primaryKey","code":""},{"title":"Extend - propertyMapping","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/propertyMapping","code":""},{"title":"Extend - store","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/store","code":""},{"title":"Extend - storeSubstitution","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/storeSubstitution","code":""},{"title":"Extend - Union","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/extend/union","code":""},{"title":"Extend - Filter","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/filter","code":""},{"title":"GroupBy","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/groupBy","code":""},{"title":"In","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/in","code":""},{"title":"Include","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/include","code":""},{"title":"Inheritance - Cross","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/inheritance/cross","code":""},{"title":"Inheritance - Relational - multiJoins","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/inheritance/relational/multiJoins","code":""},{"title":"Inheritance - Relational - selfJoin","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/inheritance/relational/selfJoin","code":""},{"title":"Inheritance - Relational - union","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/inheritance/relational/union","code":""},{"title":"Innerjoin - Isolation","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/innerJoin/isolation","code":""},{"title":"Join","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/join","code":""},{"title":"Merge","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/merge","code":""},{"title":"Multigrain","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/multigrain","code":""},{"title":"Propertyfunc - simple","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/propertyfunc/simple","code":""},{"title":"Propertyfunc - withjoin","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/propertyfunc/withjoin","code":""},{"title":"SelfJoin","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/selfJoin","code":""},{"title":"SqlFunction","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/sqlFunction","code":""},{"title":"Subtype","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/subtype","code":""},{"title":"Tree","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/tree","code":""},{"title":"Union - Extend","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/extend","code":""},{"title":"Union - MultipleChainedJoins","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/multipleChainedJoins","code":""},{"title":"Union - Optimized","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/optimized","code":""},{"title":"Union - Partial","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/partial","code":""},{"title":"Union - PartialForeignKeyUsage","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/partialForeignKeyUsage","code":""},{"title":"Union - SqlQueryMerging","documnetation":"TODO: Some dummy description","path":"Stores/Model Store/union/sqlQueryMerging","code":""},{"title":"Relational Database Connection BigQuery with Default Credentials","description":"BigQuery connection using only default credentials. Does not include proxy.","documnetation":"","path":"Stores/Relational Store/Connection/BigQuery/DefaultCredentials","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection\n{\n  store: store::Store;\n  type: BigQuery;\n  specification: BigQuery\n  {\n    projectId: 'proj1';\n    defaultDataset: 'dataset1';\n  };\n  auth: GCPApplicationDefaultCredentials;\n}\n"},{"title":"Relational Database Connection BigQuery with Default Credentials and Proxy","description":"BigQuery connection using only default credentials. Does include proxy.","documnetation":"","path":"Stores/Relational Store/Connection/BigQuery/DefaultCredentialsWithProxy","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection\n{\n  store: store::Store;\n  type: BigQuery;\n  specification: BigQuery\n  {\n    projectId: 'proj1';\n    defaultDataset: 'dataset1';\n    proxyHost: 'proxyHost1';\n    proxyPort: 'proxyPort1';\n  };\n  auth: GCPApplicationDefaultCredentials;\n}\n"},{"title":"Relational Database Connection BigQuery with Identity Federation","description":"BigQuery connection using Identity Federation.","documnetation":"","path":"Stores/Relational Store/Connection/BigQuery/IdentityFederation","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection\n{\n  store: store::Store;\n  type: BigQuery;\n  specification: BigQuery\n  {\n    projectId: 'proj1';\n    defaultDataset: 'dataset1';\n  };\n  auth: GCPWorkloadIdentityFederation\n  {\n    serviceAccountEmail: 'name';\n  };\n}\n"},{"title":"Relational Database Connection BigQuery with Identity Federation additional scopes","description":"BigQuery connection using Identity Federation including additional scopes.","documnetation":"","path":"Stores/Relational Store/Connection/BigQuery/IdentityFederationWithScopes","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection\n{\n  store: store::Store;\n  type: BigQuery;\n  specification: BigQuery\n  {\n    projectId: 'proj1';\n    defaultDataset: 'dataset1';\n  };\n  auth: GCPWorkloadIdentityFederation\n  {\n    serviceAccountEmail: 'name';\n    additionalGcpScopes: [\n      'gcpScope',\n      'anotherGcpScope'\n      ];\n  };\n}\n"},{"title":"Relational Database Connection Databricks","description":"Examples of all valid Databricks connection specs","documnetation":"","path":"Stores/Relational Store/Connection/Databricks","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection\n{\n  store: store::Store;\n  type: Databricks;\n  specification: Databricks\n  {\n    hostname: 'databricks.com';\n    port: '443';\n    protocol: 'https';\n    httpPath: 'databricks/api/path';\n  };\n  auth: ApiToken\n  {\n    apiToken: 'databricks.api.token';\n  };\n}"},{"title":"Relational Database Connection MemSQL","description":"Examples of all valid MemSQL connection specs","documnetation":"","path":"Stores/Relational Store/Connection/MemSQL","code":""},{"title":"Relational Database Connection Postgres","description":"Examples of all valid Postgres connection specs","documnetation":"","path":"Stores/Relational Store/Connection/Postgres","code":""},{"title":"Relational Database Connection SQL Server","description":"Examples of all valid SQL Server connection specs","documnetation":"","path":"Stores/Relational Store/Connection/SQL Server","code":""},{"title":"Relational Database Connection Spanner","description":"Examples of all valid Spanner connection specs","documnetation":"","path":"Stores/Relational Store/Connection/Spanner","code":"###Connection\nRelationalDatabaseConnection mySimpleConnection1\n{\n  store: store::Store;\n  type: Spanner;\n  specification: Spanner\n  {\n    projectId: 'spanner-emulator-test-1';\n    instanceId: 'test-instance-1';\n    databaseId: 'test-db';\n    proxyHost: 'localhost';\n    proxyPort: 9010;\n  };\n  auth: GCPApplicationDefaultCredentials;\n}\n\nRelationalDatabaseConnection mySimpleConnection2\n{\n  store: store::Store;\n  type: Spanner;\n  specification: Spanner\n  {\n    projectId: 'spanner-emulator-test-1';\n    instanceId: 'test-instance-1';\n    databaseId: 'test-db';\n  };\n  auth: GCPApplicationDefaultCredentials;\n}\n\nRelationalDatabaseConnection mySimpleConnection3\n{\n  store: store::Store;\n  type: Spanner;\n  specification: Spanner\n  {\n    projectId: 'spanner-emulator-test-1';\n    instanceId: 'test-instance-1';\n    databaseId: 'test-db';\n  };\n  auth: DelegatedKerberos;\n}\n\nRelationalDatabaseConnection mySimpleConnection4\n{\n  store: store::Store;\n  type: Spanner;\n  specification: Spanner\n  {\n    projectId: 'spanner-emulator-test-1';\n    instanceId: 'test-instance-1';\n    databaseId: 'test-db';\n    proxyHost: 'localhost';\n    proxyPort: 9010;\n  };\n  auth: GCPWorkloadIdentityFederation\n  {\n    serviceAccountEmail: 'name';\n  };\n}\n\nRelationalDatabaseConnection mySimpleConnection5\n{\n  store: store::Store;\n  type: Spanner;\n  specification: Spanner\n  {\n    projectId: 'spanner-emulator-test-1';\n    instanceId: 'test-instance-1';\n    databaseId: 'test-db';\n    proxyHost: 'localhost';\n    proxyPort: 9010;\n  };\n  auth: GCPWorkloadIdentityFederation\n  {\n    serviceAccountEmail: 'name';\n    additionalGcpScopes: [\n      'gcpScope',\n      'anotherGcpScope'\n      ];\n  };\n}"},{"title":"Relational Database Connection Trino","description":"Examples of all valid Trino connection specs","documnetation":"","path":"Stores/Relational Store/Connection/Trino","code":"###Connection\nRelationalDatabaseConnection TrinoConnection\n{\n  store: store::Store;\n  type: Trino;\n  specification: Trino\n  {\n    host: 'host';\n    port: 1234;\n    catalog: 'tpch';\n    schema: 'tiny';\n    clientTags: 'cg::vega';\n    sslSpecification:\n    {\n      ssl: false;\n      trustStorePathVaultReference: 'abc12cde';\n      trustStorePasswordVaultReference: 'abc12cde';\n    };\n  };\n  auth: TrinoDelegatedKerberos\n  {\n    kerberosUseCanonicalHostname: false;\n    kerberosRemoteServiceName: 'HTTP';\n  };\n}"},{"title":"Basic Relational Database Specification","description":"Example of database specification with no explicit schema or joins","documnetation":"","path":"Stores/Relational Store/Database Specification/Basic","code":"###Relational\nDatabase SimpleDB\n(\n  // There is an implicit 'default' schema \n  Table People\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n  Table Firms\n  (\n    id INTEGER PRIMARY KEY,\n    legal_name VARCHAR(200)\n  )\n)\n"},{"title":"Relational Database Specification with Filter","description":"Example of database specification with Filter","documnetation":"","path":"Stores/Relational Store/Database Specification/Filter","code":"###Relational\nDatabase SimpleDB\n(\n  // There is an implicit 'default' schema \n  Table People\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n  Table Firms\n  (\n    id INTEGER PRIMARY KEY,\n    legal_name VARCHAR(200)\n  )\n\n  // Filters at the database level can be shared with several mappings\n  Filter largePersonIds(People.id > 100)\n)\n"},{"title":"Basic Relational Database Specification with Includes","description":"Example of database specification with other Database definitions included","documnetation":"","path":"Stores/Relational Store/Database Specification/Include","code":"###Relational\nDatabase SimpleDB\n(\n  include IncludedDB\n\n  // Definitions in included DB are available here\n  Table People\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n  Table Firms\n  (\n    id INTEGER PRIMARY KEY,\n    legal_name VARCHAR(200)\n  )\n)\n\nDatabase IncludedDB\n(\n  Table PeoplePart2\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n)"},{"title":"Relational Database Specification with Milestoning","description":"Example of database specification with Milestoning","documnetation":"","path":"Stores/Relational Store/Database Specification/Join/Basic","code":"###Relational\nDatabase SimpleDB\n(\n  Table People\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n  Table Firms\n  (\n    id INTEGER PRIMARY KEY,\n    legal_name VARCHAR(200)\n  )\n\n  Join PersonCompany(People.firm_id = Firms.id)\n  // Joins can also be defined across schemas\n)\n"},{"title":"Relational Database Specification with Join placeholder","description":"Example of database specification with join placeholder.","documnetation":"TODO: explain what this feature is useful for.","path":"Stores/Relational Store/Database Specification/Join/Self Join","code":"###Relational\nDatabase SimpleDB\n(\n  Table People\n  (\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    firm_id INTEGER\n  )\n  Table Firms\n  (\n    id INTEGER PRIMARY KEY,\n    legal_name VARCHAR(200)\n  )\n\n  Join PersonCompany(People.id = {target}.firm_id)\n)\n"},{"title":"Relational Database Specification with Bitemporal Milestoning","description":"Example of database specification with Bitemporal Milestoning.","documnetation":"","path":"Stores/Relational Store/Database Specification/Milestoning/Bitemporal","code":"###Relational\nDatabase MilestonedDB\n(\n  Table BiTemporalProductTable\n  (\n    milestoning\n    (\n      processing(PROCESSING_IN = in_z, PROCESSING_OUT = out_z, INFINITY_DATE = %9999-12-31T00:00:00.0000),\n      business(BUS_FROM = from_z, BUS_THRU = thru_z, INFINITY_DATE = %9999-12-31T00:00:00.0000)\n    )\n\n    id INTEGER PRIMARY KEY,\n    type VARCHAR(200),\n    in_z DATE,\n    out_z DATE,\n    from_z DATE,\n    thru_z DATE\n  )\n)"},{"title":"Relational Database Specification with Business Milestoning","description":"Example of database specification with Business Milestoning.","documnetation":"","path":"Stores/Relational Store/Database Specification/Milestoning/Business","code":"###Relational\nDatabase MilestonedDB\n(\n  Table ProductTable\n  (\n    milestoning\n    (\n      // A subset of the following options can be used with the minimal being BUS_FROM and BUS_THRU\n      business(BUS_FROM = from_z, BUS_THRU = thru_z, THRU_IS_INCLUSIVE = true, INFINITY_DATE = %9999-12-31T00:00:00.0000)\n    )\n\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200) PRIMARY KEY,\n    type VARCHAR(200),\n    exchange VARCHAR(200),\n    classificationSystemId INTEGER,\n    referenceSystemName VARCHAR(200),\n    externalReferenceSystemName VARCHAR(200),\n    from_z DATE,\n    thru_z DATE\n  )\n  Table ProductTableWithBusinessSnapshotMilestoning\n  (\n    milestoning\n    (\n      business(BUS_SNAPSHOT_DATE = snapshotDate)\n    )\n\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    type VARCHAR(200),\n    snapshotDate DATE\n  )\n)\n"},{"title":"Relational Database Specification with Processing Milestoning","description":"Example of database specification with Temporal Milestoning.","documnetation":"","path":"Stores/Relational Store/Database Specification/Milestoning/Processing","code":"###Relational\nDatabase MilestonedDB\n(\n  Table BiTemporalProductTableWithProcessingMilestoning\n  (\n    milestoning\n    (\n      // The minimal set of options is PROCESSING_IN and PROCESSING_OUT\n      processing(PROCESSING_IN = in_z, PROCESSING_OUT = out_z, OUT_IS_INCLUSIVE = true, INFINITY_DATE = %9999-12-31T00:00:00.0000)\n    )\n\n    id INTEGER PRIMARY KEY,\n    name VARCHAR(200),\n    type VARCHAR(200),\n    in_z DATE,\n    out_z DATE\n  )\n)\n"},{"title":"Relational Database Specification with explicit Schema","description":"Example of database specification with explicit schema","documnetation":"","path":"Stores/Relational Store/Database Specification/Schema","code":"###Relational\nDatabase SimpleDB\n(\n  Schema SimpleSchema\n  (\n    Table People\n    (\n      id INTEGER PRIMARY KEY,\n      name VARCHAR(200),\n      firm_id INTEGER\n    )\n    Table Firms\n    (\n      id INTEGER PRIMARY KEY,\n      legal_name VARCHAR(200)\n    )\n  )\n  // Joins go outside the schema\n)\n"},{"title":"Relational Database Specification with Views","description":"Example of database specification with Views.","documnetation":"Views are effectively transformations at the database level. They have the same syntax as Mappings but have a few different features.\nTODO: include a description on why views are required.","path":"Stores/Relational Store/Database Specification/View","code":"###Relational\nDatabase SimpleDB\n(\n  Schema SimpleSchema\n  (\n    Table People\n    (\n      id INTEGER PRIMARY KEY,\n      name VARCHAR(200),\n      firm_id INTEGER\n    )\n    Table Firms\n    (\n      id INTEGER PRIMARY KEY,\n      legal_name VARCHAR(200)\n    )\n\n    View ImportantPeople\n    (\n      id: SimpleSchema.People.id PRIMARY KEY,\n      name: SimpleSchema.People.name\n    )\n  )\n)\n"},{"title":"Relational Database Distinct Mapping","description":"A simple example of a mapping containing a distinct operator.","documnetation":"","path":"Stores/Relational Store/Mapping/Distinct","code":"###Mapping\nMapping SimpleDistinctMapping\n(\n  Person: Relational\n  {\n    ~distinct\n    name: People.name\n  }\n)"},{"title":"Relational Database Embedded Inline Mapping","description":"An example of an inline mapping.","documnetation":"","path":"Stores/Relational Store/Mapping/Embedded/Inline","code":"###Mapping\nMapping SimpleInlineMapping\n(\n  Person: Relational\n  {\n    name: People.name,\n    // Either of the following are valid syntax with the former more useful if\n    // repeated.\n    address() Inline[USAddress],\n    pet\n    (\n      name: Pets.name\n    )\n  }\n  Address[USAddress]: Relational\n  {\n    street_address: Addresses.street_address,\n    zip: US_Zips.zip_code\n  }\n)"},{"title":"Relational Database Otherwise Mapping","description":"A simple example of a mapping containing the otherwise operator.","documnetation":"","path":"Stores/Relational Store/Mapping/Embedded/Otherwise","code":"###Mapping\nMapping SimpleOtherwiseMapping\n(\n  Person: Relational\n  {\n    name: People.name,\n    pet\n    (\n      name: Pets.name\n    ) Otherwise ([backupPetMapping]: @PetOwner)\n  }\n  Pet[backupPetMapping]: Relational\n  {\n    name: BackupPets.name\n  }\n)\n"},{"title":"Relational Database Mapping with Inheritance","description":"A simple example of a mapping that demonstrates inheritance through the extends keyword.","documnetation":"","path":"Stores/Relational Store/Mapping/Extends","code":"###Mapping\nMapping SimpleInheritanceMapping\n(\n  Person[basePerson]: Relational\n  {\n    name: People.name\n  }\n  GoodPerson[goodperson] extends [basePerson]: Relational\n  {\n    available_promotion_titles: Promotions.title\n  }\n)"},{"title":"Relational Database Filter Mapping","description":"A simple example of a mapping that uses a filter.","documnetation":"","path":"Stores/Relational Store/Mapping/Filter","code":"###Mapping\nMapping SimpleFilterMapping\n(\n  Person: Relational\n  {\n    ~filter [SomeDB]longNameFilter\n    name: People.name\n  }\n)"},{"title":"Relational Database GroupBy Mapping","description":"A simple example of a mapping using the groupBy operator.","documnetation":"","path":"Stores/Relational Store/Mapping/GroupBy","code":"###Mapping\nMapping SimpleGroupByMapping\n(\n  Person: Relational\n  {\n    ~groupBy\n    (\n      [SomeDB]People.firm_id\n    )\n    name: People.name\n  }\n)\n"},{"title":"Relational Database Mapping with Includes","description":"An example of a Mapping with include statements.","documnetation":"","path":"Stores/Relational Store/Mapping/Include/Basic","code":"###Mapping\nMapping IncludeMapping\n(\n  include mapping BaseMapping\n\n  Person: Relational\n  {\n    name: [SimpleDB]People.name\n  }\n)\n"},{"title":"Relational Database Mapping with Store Substitution","description":"An example of a Mapping using store substitution across mappings.","documnetation":"Store substitution changes the store used in the included mapping.","path":"Stores/Relational Store/Mapping/Include/Store Substitution","code":"###Mapping\nMapping IncludeSubstitutionMapping\n(\n  include mapping BaseMapping[SimpleDB->ComplexDB]\n\n  Person: Relational\n  {\n    name: [ComplexDB]People.name\n  }\n)\n"},{"title":"Relational Database Mapping with Joins","description":"A simple example of a mapping with a join.","documnetation":"","path":"Stores/Relational Store/Mapping/Joins/Basic","code":"###Mapping\nMapping SimpleJoinMapping\n(\n  Person: Relational\n  {\n    name: People.name,\n    firm: [SomeDB]@FirmPerson,\n    pet_name: [SomeDB]@PersonPets | [SomeDB]Pets.name\n  }\n)\n"},{"title":"Relational Database Mapping with Chained Joins","description":"An example of a Mapping with Chained joins including setting join type.","documnetation":"","path":"Stores/Relational Store/Mapping/Joins/Chained","code":"###Mapping\nMapping ChainedJoinMapping\n(\n  Person: Relational\n  {\n    name: People.name,\n    firm: [SomeDB]@FirmPerson,\n    good_pet_name: [SomeDB]@PersonPet > (INNER) [SomeDB]@GoodPets | [SomeDB]Pets.name\n  }\n)\n"},{"title":"Relational Database Mapping with Scoped Block","description":"An example of a Mapping using a scoped block for readability.","documnetation":"","path":"Stores/Relational Store/Mapping/Scope","code":"###Mapping\nMapping SimpleScopedMapping\n(\n  Person: Relational\n  {\n    // scope([SimpleDB]SimpleSchema.People) can be used to extract the prefix\n    name: [SimpleDB]SimpleSchema.People.name\n  }\n)\n"},{"title":"Service Store","documnetation":"TODO: Some dummy description","path":"Stores/Service Store","code":""}]