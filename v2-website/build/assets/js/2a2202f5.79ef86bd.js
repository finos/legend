"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[506],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),g=r,m=c["".concat(s,".").concat(g)]||c[g]||u[g]||i;return n?a.createElement(m,l(l({ref:t},d),{},{components:n})):a.createElement(m,l({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"installation-guide",title:"Installation guide",sidebar_label:"Installation Guide"},s=void 0,p={unversionedId:"getting-started/installation-guide",id:"getting-started/installation-guide",title:"Installation guide",description:"There are a few different options to install and use Legend. They are listed below in increasing order of integration and installation complexity.",source:"@site/../docs/getting-started/installation-guide.md",sourceDirName:"getting-started",slug:"/getting-started/installation-guide",permalink:"/docs/getting-started/installation-guide",draft:!1,tags:[],version:"current",frontMatter:{id:"installation-guide",title:"Installation guide",sidebar_label:"Installation Guide"},sidebar:"docs",previous:{title:"Introduction to Legend",permalink:"/docs/getting-started/introduction-to-legend"},next:{title:"Studio",permalink:"/docs/tutorials/studio-tutorial"}},d={},u=[{value:"Maven Install",id:"maven-install",level:2},{value:"Installation Guide",id:"installation-guide",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Installation steps",id:"installation-steps",level:3},{value:"Setup <strong>legend-engine</strong>.",id:"setup-legend-engine",level:4},{value:"Setup <strong>legend-sdlc</strong>.",id:"setup-legend-sdlc",level:4},{value:"Setup <strong>legend-depot</strong>.",id:"setup-legend-depot",level:4},{value:"Setup <strong>legend-studio</strong>.",id:"setup-legend-studio",level:4},{value:"You&#39;re all set \ud83c\udf89",id:"youre-all-set-",level:4},{value:"Docker Compose",id:"docker-compose",level:2},{value:"Production Install",id:"production-install",level:2}],c={toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"There are a few different options to install and use Legend. They are listed below in increasing order of integration and installation complexity."),(0,i.kt)("h2",{id:"maven-install"},"Maven Install"),(0,i.kt)("p",null,"This option is for software developers who want to build and run Legend from source."),(0,i.kt)("h3",{id:"installation-guide"},"Installation Guide"),(0,i.kt)("p",null,"The Legend platform has several components. The minimum required to run Legend are ",(0,i.kt)("inlineCode",{parentName:"p"},"Engine"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"SDLC"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"Studio"),". These components include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Engine"),": Provides a Pure parser and compiler that executes plans when provided with a Pure function, a mapping, and a runtime. It's also an access point for model transformers written using the Legend language."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"SDLC"),": Provides a rich REST API letting users manage metadata. Most SDLCs are file and text-centric, but the Legend SDLC is model-centric, meaning users interact with model entities rather than with files and folders. The Legend SDLC enables:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Users to develop with tools designed for editing models (rather than files or code)."),(0,i.kt)("li",{parentName:"ul"},"Users to view changes with tools designed for viewing model-level changes (rather than text changes)."),(0,i.kt)("li",{parentName:"ul"},"Clients to create their own tools for their own use cases."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Studio"),": Provides a way to describe and connect data in business terms to create data models."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Pure"),": Provides a way to alter Pure, the underlying language for Legend."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Depot"),": Provides a metadata registry to support project dependencies and artifact publishing."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Shared"),": Provides shared code used across Legend apps for generic server-side functionality, such as serving static files, performing authentication, and so on.")),(0,i.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A GitLab.com account or your own GitLab server."),(0,i.kt)("p",{parentName:"li"},"Create an ",(0,i.kt)("em",{parentName:"p"},"Application")," by navigating to ",(0,i.kt)("inlineCode",{parentName:"p"},"User Settings > Applications")," and create an application with the following parameters:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Name: Legend Demo"),(0,i.kt)("li",{parentName:"ul"},'Enable the "Confidential" check box'),(0,i.kt)("li",{parentName:"ul"},"Enable these scopes: openid, profile, api"),(0,i.kt)("li",{parentName:"ul"},"Redirect URI: Add the followings:")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\nhttp://localhost:6100/api/auth/callback\nhttp://localhost:6100/api/pac4j/login/callback\n\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Java Development Kit (JDK) 11 or later."),(0,i.kt)("li",{parentName:"ul"},"Maven 3.6 or later.")),(0,i.kt)("h3",{id:"installation-steps"},"Installation steps"),(0,i.kt)("h4",{id:"setup-legend-engine"},"Setup ",(0,i.kt)("strong",{parentName:"h4"},"legend-engine"),"."),(0,i.kt)("p",null,"From the root directory of the ",(0,i.kt)("inlineCode",{parentName:"p"},"legend-engine")," repo, follow the steps below in order:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\nmvn install [-DskipTests]\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\njava -cp legend-engine-server/target/*-shaded.jar org.finos.legend.engine.server.Server server legend-engine-server/src/test/resources/org/finos/legend/engine/server/test/userTestConfig.json\n\n")),(0,i.kt)("p",null,"Test by going to http://localhost:6300 in a browser. The Swagger page can be accessed at http://localhost:6300/api/swagger."),(0,i.kt)("h4",{id:"setup-legend-sdlc"},"Setup ",(0,i.kt)("strong",{parentName:"h4"},"legend-sdlc"),"."),(0,i.kt)("p",null,"Create a configuration file based on your particular environment. This can be JSON or YAML."),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/finos/legend-sdlc/blob/master/legend-sdlc-server/src/test/resources/config-sample.yaml"},"sample configuration file")," is included to help you get started. You will need to replace some ",(0,i.kt)("inlineCode",{parentName:"p"},"placeholders"),", such as Gitlab instance your SDLC server is pointing at."),(0,i.kt)("p",null,"From the root directory of the ",(0,i.kt)("inlineCode",{parentName:"p"},"legend-sdlc")," repo, follow the steps below in order:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\nmvn install [-DskipTests]\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\n# Make sure to replace <path-to-config>\njava -cp legend-sdlc-server/target/*-shaded.jar org.finos.legend.sdlc.server.LegendSDLCServer server <path-to-config>\n\n")),(0,i.kt)("p",null,"Test by going to http://localhost:6100/api/info in the browser. The page should return basic server information."),(0,i.kt)("p",null,"Visit http://localhost:6100/api/auth/authorize in your browser, you might get redirected to the Gitlab login page or a Gitlab page that askes you to authorize Legend application. After you authenticate/authorize you should be redirected back to SDLC."),(0,i.kt)("h4",{id:"setup-legend-depot"},"Setup ",(0,i.kt)("strong",{parentName:"h4"},"legend-depot"),"."),(0,i.kt)("p",null,"Follow this ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/finos/legend-depot/blob/master/README.md#getting-started"},"guide")," on how to start local Depot."),(0,i.kt)("h4",{id:"setup-legend-studio"},"Setup ",(0,i.kt)("strong",{parentName:"h4"},"legend-studio"),"."),(0,i.kt)("p",null,"Follow this ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/blob/master/README.md#getting-started"},"guide")," on how to start local Studio."),(0,i.kt)("h4",{id:"youre-all-set-"},"You're all set \ud83c\udf89"),(0,i.kt)("p",null,"Visit http://localhost:9000/studio and start hacking"),(0,i.kt)("h2",{id:"docker-compose"},"Docker Compose"),(0,i.kt)("p",null,"This option is a more automated process to start Legend Docker images for running a proof of concept. Instructions can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/finos/legend/tree/master/installers/docker-compose"},"here"),"."),(0,i.kt)("h2",{id:"production-install"},"Production Install"),(0,i.kt)("p",null,"A production install will have to be adjusted to match your specific deployment environment. We publish Docker images, but some additional setup is required."),(0,i.kt)("p",null,"This includes but is not limited to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Configuring SSL Certificates"),(0,i.kt)("li",{parentName:"ul"},"Configuring OAuth on Gitlab"),(0,i.kt)("li",{parentName:"ul"},"Configuring authentication using an identity provider")),(0,i.kt)("p",null,"We are happy to help develop installation instructions to meet your particular deployment environment."))}g.isMDXComponent=!0}}]);