"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4222],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>g});var a=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),y=n,g=c["".concat(l,".").concat(y)]||c[y]||d[y]||o;return r?a.createElement(g,s(s({ref:t},p),{},{components:r})):a.createElement(g,s({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:n,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},5137:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=r(8168),n=r(8587),o=(r(6540),r(5680)),s=["components"],i={id:"release-2022-07-15",title:"Release 2022-07-15",sidebar_label:"Release 2022-07-15"},l=void 0,u={unversionedId:"release/release-2022-07-15",id:"release/release-2022-07-15",title:"Release 2022-07-15",description:"Released Features",source:"@site/../docs/release/2022-07-15.md",sourceDirName:"release",slug:"/release/release-2022-07-15",permalink:"/docs/release/release-2022-07-15",draft:!1,tags:[],version:"current",frontMatter:{id:"release-2022-07-15",title:"Release 2022-07-15",sidebar_label:"Release 2022-07-15"}},p={},c=[{value:"Released Features",id:"released-features",level:2},{value:"Service editor",id:"service-editor",level:3},{value:"Query builder",id:"query-builder",level:3},{value:"Data Spaces",id:"data-spaces",level:3},{value:"Developer Experience",id:"developer-experience",level:3}],d={toc:c},y="wrapper";function g(e){var t=e.components,r=(0,n.A)(e,s);return(0,o.yg)(y,(0,a.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"released-features"},"Released Features"),(0,o.yg)("h3",{id:"service-editor"},"Service editor"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Create re-usable test data."),' You can now create test data in the new element "Data" that can be easily re-used across all your service tests in your Studio project. This includes test data for external formats, relational stores and service stores. We are working on making the same functionality available in mapping tests as well - stay tuned! More details and ',(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1195"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Improved service test capabilities.")," It is now more intuitive to add tests to your services via the uplifted Service Test Editor. After setting up general information about your service as well as execution details, you can generate test data with a click of a button (or use test data you created). We highly encourage setting up tests for all services running in production. More details and ",(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1195"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Run all tests across your project simultaneously."),' You can now run all saved tests across your Studio project at the same time in the new "testables" section. Previously, users needed to navigate to the Service or Mapping editor respectively to run tests. This will be hugely beneficial when testing how changes to your data model may impact data feeds or ad-hoc data queries of your data consumers. More details and ',(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1114"},"here"),"."),(0,o.yg)("h3",{id:"query-builder"},"Query builder"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Search for properties when building your data query.")," You can now search for data model properties when building a query. The search functionality includes filtering by specific data types and dragging & dropping of the selected property into the fetch panel. More details and ",(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1212"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"See the full element path of classes"),". When selecting the class you want to query, you can now see the full element path to avoid picking the wrong class in case of duplicates. More details and ",(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1243"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Review execution time and result set size of your query.")," You can now see how long it takes to run your query and how many rows are being returned. This will help users to identify issues with their query. More details and ",(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1244"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},'"Filter by" results in your query.')," You can now quickly filter by returned results (row entries) post running a query. This will add a post filter to your query that you can then further customize if needed. More details and ",(0,o.yg)("strong",{parentName:"p"},"video walkthrough")," ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/pull/1204"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Mapping your data model to data services.")," Studio now supports connecting data models to data services via Service Store Mappings. As a cherry on top, you can also query all mapped properties in the Query Builder taking advantage of the self-service query capabilities. More details ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/finos/legend-studio/issues/816"},"here"),"."),(0,o.yg)("h3",{id:"data-spaces"},"Data Spaces"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Data spaces compilation checks.")," Data space code is now checked for query ability and quality upon compilation. Previously, data spaces could refer to mappings & runtimes of other (non-dependent) projects, which made compilation checks difficult. This ensures that all data spaces can reliably be used as entry points for data queries. "),(0,o.yg)("h3",{id:"developer-experience"},"Developer Experience"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Easier and safer testing of new data model versions."),' You can now depend on another project\'s "HEAD" version to dynamically pull in and review incoming changes. As a data producer, you can more safely release new project versions because your consumers can test any data model changes before updating to a new released version.'))}g.isMDXComponent=!0}}]);